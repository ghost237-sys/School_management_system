[33mcommit 9e1d7ff96f3749a784e3a67f435eb9c24aaa0f01[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m)[m
Author: emiliomurithimwaniki <164023207+emiliomurithimwaniki@users.noreply.github.com>
Date:   Thu Jul 31 10:10:50 2025 +0300

    Added Result slip in Teachers dashboard

[1mdiff --git a/core/__pycache__/models.cpython-313.pyc b/core/__pycache__/models.cpython-313.pyc[m
[1mindex 5e5ca0c..ada76b1 100644[m
Binary files a/core/__pycache__/models.cpython-313.pyc and b/core/__pycache__/models.cpython-313.pyc differ
[1mdiff --git a/core/__pycache__/urls.cpython-313.pyc b/core/__pycache__/urls.cpython-313.pyc[m
[1mindex 77fa3e4..18034e2 100644[m
Binary files a/core/__pycache__/urls.cpython-313.pyc and b/core/__pycache__/urls.cpython-313.pyc differ
[1mdiff --git a/core/__pycache__/views.cpython-313.pyc b/core/__pycache__/views.cpython-313.pyc[m
[1mindex ecb3531..3ec3089 100644[m
Binary files a/core/__pycache__/views.cpython-313.pyc and b/core/__pycache__/views.cpython-313.pyc differ
[1mdiff --git a/core/migrations/0026_remove_message_recipients_message_recipient_and_more.py b/core/migrations/0026_remove_message_recipients_message_recipient_and_more.py[m
[1mnew file mode 100644[m
[1mindex 0000000..3a3296f[m
[1m--- /dev/null[m
[1m+++ b/core/migrations/0026_remove_message_recipients_message_recipient_and_more.py[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m# Generated by Django 5.2.3 on 2025-07-31 05:26[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0025_remove_message_recipient_message_recipients'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='message',[m
[32m+[m[32m            name='recipients',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='message',[m
[32m+[m[32m            name='recipient',[m
[32m+[m[32m            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='SubjectGradingScheme',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('grade_boundaries', models.JSONField(default=dict, help_text="Map of grade letter to [min, max] score, e.g. {'A': [80, 100], 'B': [70, 79]}")),[m
[32m+[m[32m                ('updated_at', models.DateTimeField(auto_now=True)),[m
[32m+[m[32m                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grading_scheme', to='core.subject')),[m
[32m+[m[32m                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/core/migrations/__pycache__/0026_remove_message_recipients_message_recipient_and_more.cpython-313.pyc b/core/migrations/__pycache__/0026_remove_message_recipients_message_recipient_and_more.cpython-313.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..4274cc7[m
Binary files /dev/null and b/core/migrations/__pycache__/0026_remove_message_recipients_message_recipient_and_more.cpython-313.pyc differ
[1mdiff --git a/core/models.py b/core/models.py[m
[1mindex 068046b..db908a1 100644[m
[1m--- a/core/models.py[m
[1m+++ b/core/models.py[m
[36m@@ -113,6 +113,23 @@[m [mclass Grade(models.Model):[m
     grade_letter = models.CharField(max_length=2, blank=True, null=True)[m
     remarks = models.TextField(blank=True)[m
 [m
[32m+[m[32mclass SubjectGradingScheme(models.Model):[m
[32m+[m[32m    subject = models.OneToOneField(Subject, on_delete=models.CASCADE, related_name='grading_scheme')[m
[32m+[m[32m    # Store grade boundaries as a JSON field: e.g. {"A": [80, 100], "B": [70, 79], ...}[m
[32m+[m[32m    grade_boundaries = models.JSONField(default=dict, help_text="Map of grade letter to [min, max] score, e.g. {'A': [80, 100], 'B': [70, 79]}")[m
[32m+[m[32m    updated_at = models.DateTimeField(auto_now=True)[m
[32m+[m[32m    updated_by = models.ForeignKey('User', on_delete=models.SET_NULL, null=True, blank=True)[m
[32m+[m
[32m+[m[32m    def get_grade_letter(self, score):[m
[32m+[m[32m        """Return the grade letter for a given score based on boundaries."""[m
[32m+[m[32m        for letter, (min_score, max_score) in self.grade_boundaries.items():[m
[32m+[m[32m            if min_score <= score <= max_score:[m
[32m+[m[32m                return letter[m
[32m+[m[32m        return None[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Grading Scheme for {self.subject.name}"[m
[32m+[m
 # --- Fee Management Models ---[m
 [m
 class FeeCategory(models.Model):[m
[36m@@ -227,7 +244,7 @@[m [mclass FinanceMessageHistory(models.Model):[m
         return f"To {self.recipient.username} at {self.sent_at:%Y-%m-%d %H:%M}"[m
 class Message(models.Model):[m
     sender = models.ForeignKey(User, related_name='sent_messages', on_delete=models.CASCADE)[m
[31m-    recipient = models.ForeignKey(User, related_name='received_messages', on_delete=models.CASCADE)[m
[32m+[m[32m    recipient = models.ForeignKey(User, related_name='received_messages', on_delete=models.CASCADE, null=True, blank=True)[m
     content = models.TextField()[m
     timestamp = models.DateTimeField(auto_now_add=True)[m
     is_read = models.BooleanField(default=False)[m
[1mdiff --git a/core/templates/dashboards/admin_class_result_slip.html b/core/templates/dashboards/admin_class_result_slip.html[m
[1mindex 55e5511..cad6884 100644[m
[1m--- a/core/templates/dashboards/admin_class_result_slip.html[m
[1m+++ b/core/templates/dashboards/admin_class_result_slip.html[m
[36m@@ -26,102 +26,194 @@[m
             <button type="submit" class="btn btn-primary">View</button>[m
         </div>[m
     </form>[m
[31m-    <button class="btn btn-primary mb-3" onclick="printSection('class-result-slip-section', 'Class Result Slip')"><i class="fa fa-print"></i> Print Result Slip</button>[m
[31m-    <div id="class-result-slip-section">[m
[31m-        <table class="table table-bordered table-striped">[m
[31m-            <thead class="table-light">[m
[31m-                <tr>[m
[31m-                    <th>Rank</th>[m
[31m-                    <th>Student</th>[m
[31m-                    {% for subject in subjects %}[m
[31m-                        <th>{% if subject.code == 'TELAG_NLC_A' or subject.code == 'SC_TELAG_NLC_A' %}INT-SCI{% else %}{{ subject.code }}{% endif %}</th>[m
[31m-                    {% endfor %}[m
[31m-                    <th>Average</th>[m
[31m-                </tr>[m
[31m-            </thead>[m
[31m-            <tbody>[m
[31m-                {% for student in students %}[m
[31m-                <tr>[m
[31m-                    <td>{{ ranks|get_item:student.id }}</td>[m
[31m-                    <td>{{ student.user.get_full_name|default:student.user.username }}</td>[m
[31m-                    {% for subject in subjects %}[m
[31m-                        <td>[m
[31m-                            {% with grade=grades|dict_get:student.id|dict_get:subject.id %}[m
[31m-                                {% if grade %}[m
[31m-                                    {{ grade.score|floatformat:1 }} ({{ grade.grade_letter }})[m
[31m-                                {% else %}[m
[31m-                                    N/A[m
[31m-                                {% endif %}[m
[31m-                            {% endwith %}[m
[31m-                        </td>[m
[31m-                    {% endfor %}[m
[31m-                    <td>{{ averages|get_item:student.id|floatformat:1 }}</td>[m
[31m-                </tr>[m
[31m-                {% empty %}[m
[31m-                <tr><td colspan="{{ subjects|length|add:'3' }}">No students found for this class.</td></tr>[m
[31m-                {% endfor %}[m
[31m-            </tbody>[m
[31m-        </table>[m
[31m-    </div>[m
[31m-    </div> <!-- end class-result-slip-section -->[m
[31m-    <hr>[m
[31m-    <h4>Class Performance Comparison (Same Level)</h4>[m
[31m-    <div class="table-responsive mb-4">[m
[31m-        <table class="table table-bordered table-striped w-auto">[m
[31m-            <thead class="table-light">[m
[31m-                <tr>[m
[31m-                    <th>Class</th>[m
[31m-                    <th>Average Score</th>[m
[31m-                </tr>[m
[31m-            </thead>[m
[31m-            <tbody>[m
[31m-                {% for cname in comparison_classes %}[m
[31m-                <tr{% if cname == class_obj.name %} class="table-primary"{% endif %}>[m
[31m-                    <td>{{ cname }}</td>[m
[31m-                    <td>{{ class_comparison_averages|get_item:cname|floatformat:1 }}</td>[m
[31m-                </tr>[m
[31m-                {% endfor %}[m
[31m-            </tbody>[m
[31m-        </table>[m
[31m-    </div>[m
[31m-    <hr>[m
[31m-    <div class="mb-3">[m
[31m-        <a href="{% url 'overall_student_results' class_obj.id %}?term={{ selected_term.id }}&exam={{ selected_exam.id }}" class="btn btn-info">View Overall Results (Detailed per Student & Subject)</a>[m
[31m-    </div>[m
[31m-    <h4>Overall Student Ranking (All Classes, Level {{ class_obj.level }})</h4>[m
[31m-    <div class="table-responsive mb-4">[m
[31m-        <table class="table table-bordered table-striped w-auto">[m
[31m-            <thead class="table-light">[m
[31m-                <tr>[m
[31m-                    <th>Rank</th>[m
[31m-                    <th>Student</th>[m
[31m-                    <th>Class</th>[m
[31m-                    <th>Average Score</th>[m
[31m-                </tr>[m
[31m-            </thead>[m
[31m-            <tbody>[m
[31m-                {% for entry in overall_students_ranked %}[m
[31m-                <tr{% if entry.student.id in ranks %} class="table-primary"{% endif %}>[m
[31m-                    <td>{{ entry.rank }}</td>[m
[31m-                    <td>{{ entry.student.user.get_full_name|default:entry.student.user.username }}</td>[m
[31m-                    <td>{{ entry.class_name }}</td>[m
[31m-                    <td>{{ entry.average|floatformat:0 }}</td>[m
[31m-                </tr>[m
[31m-                {% endfor %}[m
[31m-            </tbody>[m
[31m-        </table>[m
[32m+[m[32m    <!-- Tabs and content inserted above -->[m
[32m+[m[32m    <ul class="nav nav-tabs" id="myTab" role="tablist">[m
[32m+[m[32m        <li class="nav-item" role="presentation">[m
[32m+[m[32m            <button class="nav-link active" id="class-results-tab" data-bs-toggle="tab" data-bs-target="#class-results" type="button" role="tab" aria-controls="class-results" aria-selected="true">Class Results</button>[m
[32m+[m[32m        </li>[m
[32m+[m[32m        <li class="nav-item" role="presentation">[m
[32m+[m[32m            <button class="nav-link" id="performance-tab" data-bs-toggle="tab" data-bs-target="#performance" type="button" role="tab" aria-controls="performance" aria-selected="false">Performance Comparison</button>[m
[32m+[m[32m        </li>[m
[32m+[m[32m        <li class="nav-item" role="presentation">[m
[32m+[m[32m            <button class="nav-link" id="ranking-tab" data-bs-toggle="tab" data-bs-target="#ranking" type="button" role="tab" aria-controls="ranking" aria-selected="false">Student Ranking</button>[m
[32m+[m[32m        </li>[m
[32m+[m[32m        <li class="nav-item" role="presentation">[m
[32m+[m[32m            <button class="nav-link" id="subject-comparison-tab" data-bs-toggle="tab" data-bs-target="#subject-comparison" type="button" role="tab" aria-controls="subject-comparison" aria-selected="false">Student Subject Comparison</button>[m
[32m+[m[32m        </li>[m
[32m+[m[32m    </ul>[m
[32m+[m[32m    <div class="tab-content" id="myTabContent">[m
[32m+[m[32m        <!-- Class Results Tab -->[m
[32m+[m[32m        <div class="tab-pane fade show active" id="class-results" role="tabpanel" aria-labelledby="class-results-tab">[m
[32m+[m[32m            <div class="table-responsive">[m
[32m+[m[32m                <table class="table table-bordered table-hover align-middle">[m
[32m+[m[32m                    <thead class="table-light sticky-top">[m
[32m+[m[32m                        <tr>[m
[32m+[m[32m                            <th>Rank</th>[m
[32m+[m[32m                            <th>Student</th>[m
[32m+[m[32m                            {% for subject in subjects %}[m
[32m+[m[32m                                <th>{% if subject.code == 'TELAG_NLC_A' or subject.code == 'SC_TELAG_NLC_A' %}INT-SCI{% else %}{{ subject.code }}{% endif %}</th>[m
[32m+[m[32m                            {% endfor %}[m
[32m+[m[32m                            <th>Average</th>[m
[32m+[m[32m                        </tr>[m
[32m+[m[32m                    </thead>[m
[32m+[m[32m                    <tbody>[m
[32m+[m[32m                        {% for student in students %}[m
[32m+[m[32m                        <tr{% if ranks|get_item:student.id <= 3 %} class="table-success fw-bold"{% endif %}>[m
[32m+[m[32m                            <td>{{ ranks|get_item:student.id }}</td>[m
[32m+[m[32m                            <td>{{ student.user.get_full_name|default:student.user.username }}</td>[m
[32m+[m[32m                            {% for subject in subjects %}[m
[32m+[m[32m                                <td>[m
[32m+[m[32m                                    {% with grade=grades|dict_get:student.id|dict_get:subject.id %}[m
[32m+[m[32m                                        {% if grade %}[m
[32m+[m[32m                                            {{ grade.score|floatformat:1 }} ({{ grade.grade_letter }})[m
[32m+[m[32m                                        {% else %}[m
[32m+[m[32m                                            <span class="text-muted">N/A</span>[m
[32m+[m[32m                                        {% endif %}[m
[32m+[m[32m                                    {% endwith %}[m
[32m+[m[32m                                </td>[m
[32m+[m[32m                            {% endfor %}[m
[32m+[m[32m                            <td>{{ averages|get_item:student.id|floatformat:1 }}</td>[m
[32m+[m[32m                        </tr>[m
[32m+[m[32m                        {% empty %}[m
[32m+[m[32m                            <tr><td colspan="100%">No students found.</td></tr>[m
[32m+[m[32m                        {% endfor %}[m
[32m+[m[32m                    </tbody>[m
[32m+[m[32m                </table>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- Performance Comparison Tab -->[m
[32m+[m[32m        <div class="tab-pane fade" id="performance" role="tabpanel" aria-labelledby="performance-tab">[m
[32m+[m[32m            <div class="card mb-4">[m
[32m+[m[32m                <div class="card-body">[m
[32m+[m[32m                    <h5 class="card-title">Class Performance Comparison (Same Level)</h5>[m
[32m+[m[32m                    <div class="table-responsive">[m
[32m+[m[32m                        <table class="table table-bordered table-striped">[m
[32m+[m[32m                            <thead class="table-light">[m
[32m+[m[32m                                <tr>[m
[32m+[m[32m                                    <th>Class</th>[m
[32m+[m[32m                                    <th>Average Score</th>[m
[32m+[m[32m                                </tr>[m
[32m+[m[32m                            </thead>[m
[32m+[m[32m                            <tbody>[m
[32m+[m[32m                                {% for c in class_performance %}[m
[32m+[m[32m                                    <tr>[m
[32m+[m[32m                                        <td>{{ c.name }}</td>[m
[32m+[m[32m                                        <td>{{ c.average|floatformat:1 }}</td>[m
[32m+[m[32m                                    </tr>[m
[32m+[m[32m                                {% empty %}[m
[32m+[m[32m                                    <tr><td colspan="2">No class data available.</td></tr>[m
[32m+[m[32m                                {% endfor %}[m
[32m+[m[32m                            </tbody>[m
[32m+[m[32m                        </table>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- Student Ranking Tab -->[m
[32m+[m[32m        <div class="tab-pane fade" id="ranking" role="tabpanel" aria-labelledby="ranking-tab">[m
[32m+[m[32m            <div class="card mb-4">[m
[32m+[m[32m                <div class="card-body">[m
[32m+[m[32m                    <h5 class="card-title">Overall Student Ranking (All Classes, Level {{ class_obj.level }})</h5>[m
[32m+[m[32m                    <div class="table-responsive">[m
[32m+[m[32m                        <table class="table table-bordered table-hover align-middle">[m
[32m+[m[32m                            <thead class="table-light">[m
[32m+[m[32m                                <tr>[m
[32m+[m[32m                                    <th>Rank</th>[m
[32m+[m[32m                                    <th>Student</th>[m
[32m+[m[32m                                    <th>Class</th>[m
[32m+[m[32m                                    <th>Average Score</th>[m
[32m+[m[32m                                </tr>[m
[32m+[m[32m                            </thead>[m
[32m+[m[32m                            <tbody>[m
[32m+[m[32m                                {% for s in overall_students_ranked %}[m
[32m+[m[32m                                    <tr{% if s.class_name == class_obj.name %} class="table-info"{% elif forloop.counter0 == 0 %} class="table-warning fw-bold"{% endif %}>[m
[32m+[m[32m                                        <td>{{ forloop.counter }}</td>[m
[32m+[m[32m                                        <td>{{ s.student.user.get_full_name|default:s.student.user.username }}</td>[m
[32m+[m[32m                                        <td>{{ s.class_name }}</td>[m
[32m+[m[32m                                        <td>{{ s.average|floatformat:1 }}</td>[m
[32m+[m[32m                                    </tr>[m
[32m+[m[32m                                {% empty %}[m
[32m+[m[32m                                    <tr><td colspan="4">No ranking data available.</td></tr>[m
[32m+[m[32m                                {% endfor %}[m
[32m+[m[32m                            </tbody>[m
[32m+[m[32m                        </table>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- Student Subject Comparison Tab -->[m
[32m+[m[32m        <div class="tab-pane fade" id="subject-comparison" role="tabpanel" aria-labelledby="subject-comparison-tab">[m
[32m+[m[32m            <div class="card mb-4">[m
[32m+[m[32m                <div class="card-body">[m
[32m+[m[32m                    <h5 class="card-title">Student Subject Comparison (All Students, All Subjects)</h5>[m
[32m+[m[32m                    <div class="mb-3">[m
[32m+[m[32m                        <label for="subjectSortSelect" class="form-label">Sort by Subject:</label>[m
[32m+[m[32m                        <select id="subjectSortSelect" class="form-select" style="max-width: 300px; display: inline-block;">[m
[32m+[m[32m                            <option value="">-- No Sorting --</option>[m
[32m+[m[32m                            {% for subject in subjects %}[m
[32m+[m[32m                                <option value="{{ forloop.counter0 }}">{% if subject.code == 'TELAG_NLC_A' or subject.code == 'SC_TELAG_NLC_A' %}INT-SCI{% else %}{{ subject.code }}{% endif %}</option>[m
[32m+[m[32m                            {% endfor %}[m
[32m+[m[32m                        </select>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <div class="table-responsive">[m
[32m+[m[32m                        <table class="table table-bordered table-hover align-middle" id="subjectComparisonTable">[m
[32m+[m[32m                            <thead class="table-light">[m
[32m+[m[32m                                <tr>[m
[32m+[m[32m                                    <th>Student</th>[m
[32m+[m[32m                                    <th>Class</th>[m
[32m+[m[32m                                    {% for subject in subjects %}[m
[32m+[m[32m                                        <th>{% if subject.code == 'TELAG_NLC_A' or subject.code == 'SC_TELAG_NLC_A' %}INT-SCI{% else %}{{ subject.code }}{% endif %}</th>[m
[32m+[m[32m                                    {% endfor %}[m
[32m+[m[32m                                </tr>[m
[32m+[m[32m                            </thead>[m
[32m+[m[32m                            <tbody>[m
[32m+[m[32m                                {% for s in overall_students_ranked %}[m
[32m+[m[32m                                    <tr{% if s.class_name == class_obj.name %} class="table-info"{% endif %}>[m
[32m+[m[32m                                        <td>{{ s.student.user.get_full_name|default:s.student.user.username }}</td>[m
[32m+[m[32m                                        <td>{{ s.class_name }}</td>[m
[32m+[m[32m                                        {% for subject in subjects %}[m
[32m+[m[32m                                            <td>[m
[32m+[m[32m                                                {% with grade=grades|dict_get:s.student.id|dict_get:subject.id %}[m
[32m+[m[32m                                                    {% if grade %}[m
[32m+[m[32m                                                        {{ grade.score|floatformat:1 }} ({{ grade.grade_letter }})[m
[32m+[m[32m                                                    {% else %}[m
[32m+[m[32m                                                        <span class="text-muted">N/A</span>[m
[32m+[m[32m                                                    {% endif %}[m
[32m+[m[32m                                                {% endwith %}[m
[32m+[m[32m                                            </td>[m
[32m+[m[32m                                        {% endfor %}[m
[32m+[m[32m                                    </tr>[m
[32m+[m[32m                                {% empty %}[m
[32m+[m[32m                                    <tr><td colspan="100%">No students found.</td></tr>[m
[32m+[m[32m                                {% endfor %}[m
[32m+[m[32m                            </tbody>[m
[32m+[m[32m                        </table>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
     </div>[m
[31m-    <a href="{% url 'admin_classes' %}" class="btn btn-secondary mt-3">Back to Classes</a>[m
[32m+[m[32m    <!-- End Tab Content -->[m
[32m+[m[32m</div>[m
[32m+[m[32m</div> <!-- end class-result-slip-section -->[m
[32m+[m[32m<hr>[m
[32m+[m[32m<a href="{% url 'admin_classes' %}" class="btn btn-secondary mt-3">Back to Classes</a>[m
[32m+[m
[32m+[m[32m<!-- Bootstrap JS for tabs (if not already included in base.html) -->[m
[32m+[m[32m<script>[m
[32m+[m[32m    // If using Bootstrap 5, tabs work automatically if JS is loaded[m
[32m+[m[32m    // Optionally, you can set the active tab via JS here[m
[32m+[m[32m</script>[m
 <script>[m
[31m-function printSection(sectionId, title) {[m
[31m-    var content = document.getElementById(sectionId);[m
[31m-    if (!content) {[m
[31m-        alert('Section not found!');[m
[31m-        return;[m
[32m+[m[32m    // Print function (existing)[m
[32m+[m[32m    function printSection(sectionId, title) {[m
[32m+[m[32m        var printContents = document.getElementById(sectionId).innerHTML;[m
[32m+[m[32m        var originalContents = document.body.innerHTML;[m
[32m+[m[32m        document.body.innerHTML = '<h2>'+title+'</h2>' + printContents;[m
[32m+[m[32m        window.print();[m
[32m+[m[32m        document.body.innerHTML = originalContents;[m
[32m+[m[32m        location.reload();[m
     }[m
[31m-    var printWindow = window.open('', '', 'height=600,width=900');[m
[31m-    printWindow.document.write('<html><head><title>' + title + '</title>');[m
[31m-    // Optionally copy stylesheets[m
     var styles = Array.from(document.querySelectorAll('link[rel=stylesheet], style')).map(node => node.outerHTML).join('');[m
     printWindow.document.write(styles);[m
     printWindow.document.write('</head><body >');[m
[36m@@ -129,7 +221,30 @@[m [mfunction printSection(sectionId, title) {[m
     printWindow.document.write('</body></html>');[m
     printWindow.document.close();[m
     setTimeout(function(){ printWindow.print(); printWindow.close(); }, 500);[m
[31m-}[m
[32m+[m
[32m+[m[32m</script>[m
[32m+[m[32m<script>[m
[32m+[m[32m// Sorting for subject comparison table[m
[32m+[m[32mconst sortSelect = document.getElementById('subjectSortSelect');[m
[32m+[m[32mconst table = document.getElementById('subjectComparisonTable');[m
[32m+[m[32msortSelect.addEventListener('change', function() {[m
[32m+[m[32m    const colIdx = parseInt(this.value);[m
[32m+[m[32m    const tbody = table.querySelector('tbody');[m
[32m+[m[32m    const rows = Array.from(tbody.querySelectorAll('tr'));[m
[32m+[m[32m    if (isNaN(colIdx)) {[m
[32m+[m[32m        // No sorting, restore original order[m
[32m+[m[32m        rows.sort((a, b) => 0);[m
[32m+[m[32m    } else {[m
[32m+[m[32m        rows.sort((a, b) => {[m
[32m+[m[32m            const aCell = a.cells[colIdx + 2].innerText.split(' ')[0];[m
[32m+[m[32m            const bCell = b.cells[colIdx + 2].innerText.split(' ')[0];[m
[32m+[m[32m            const aVal = parseFloat(aCell) || -Infinity;[m
[32m+[m[32m            const bVal = parseFloat(bCell) || -Infinity;[m
[32m+[m[32m            return bVal - aVal;[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m    rows.forEach(row => tbody.appendChild(row));[m
[32m+[m[32m});[m
 </script>[m
 [m
   </div>[m
[1mdiff --git a/core/templates/dashboards/admin_subjects.html b/core/templates/dashboards/admin_subjects.html[m
[1mindex d38c57f..12b9c7f 100644[m
[1m--- a/core/templates/dashboards/admin_subjects.html[m
[1m+++ b/core/templates/dashboards/admin_subjects.html[m
[36m@@ -53,6 +53,7 @@[m
             <th>Subject</th>[m
             <th>Department</th>[m
             <th>Assigned Teachers</th>[m
[32m+[m[32m            <th>Actions</th>[m
           </tr>[m
         </thead>[m
         <tbody>[m
[36m@@ -69,9 +70,14 @@[m
                 <span class="text-muted">No teachers assigned</span>[m
               {% endif %}[m
             </td>[m
[32m+[m[32m            <td>[m
[32m+[m[32m              <a href="{% url 'manage_subject_grading' subject.id %}" class="btn btn-outline-primary btn-sm">[m
[32m+[m[32m                <i class="bi bi-pencil-square"></i> Manage Grading[m
[32m+[m[32m              </a>[m
[32m+[m[32m            </td>[m
           </tr>[m
           {% empty %}[m
[31m-          <tr><td colspan="3">No subjects available.</td></tr>[m
[32m+[m[32m          <tr><td colspan="4">No subjects available.</td></tr>[m
           {% endfor %}[m
         </tbody>[m
       </table>[m
[1mdiff --git a/core/